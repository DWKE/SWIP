var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"toy_car","ref":false,"files":[{"name":"ert_main.c","type":"source","group":"main","path":"C:\\Users\\user\\Desktop\\lke\\4. Matlab + Simulink + Stateflow\\Day4\\toy_car_ert_rtw","tag":"","groupDisplay":"Main file","code":"/*\r\n * Trial License - for use to evaluate programs for possible purchase as\r\n * an end-user only.\r\n *\r\n * File: ert_main.c\r\n *\r\n * Code generated for Simulink model 'toy_car'.\r\n *\r\n * Model version                  : 1.2\r\n * Simulink Coder version         : 9.8 (R2022b) 13-May-2022\r\n * C/C++ source code generated on : Thu Aug 31 14:30:01 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#include <stddef.h>\r\n#include <stdio.h>            /* This example main program uses printf/fflush */\r\n#include \"toy_car.h\"                   /* Model header file */\r\n\r\n/*\r\n * Associating rt_OneStep with a real-time clock or interrupt service routine\r\n * is what makes the generated code \"real-time\".  The function rt_OneStep is\r\n * always associated with the base rate of the model.  Subrates are managed\r\n * by the base rate from inside the generated code.  Enabling/disabling\r\n * interrupts and floating point context switches are target specific.  This\r\n * example code indicates where these should take place relative to executing\r\n * the generated code step function.  Overrun behavior should be tailored to\r\n * your application needs.  This example simply sets an error status in the\r\n * real-time model and returns from rt_OneStep.\r\n */\r\nvoid rt_OneStep(void);\r\nvoid rt_OneStep(void)\r\n{\r\n  static boolean_T OverrunFlag = false;\r\n\r\n  /* Disable interrupts here */\r\n\r\n  /* Check for overrun */\r\n  if (OverrunFlag) {\r\n    rtmSetErrorStatus(toy_car_M, \"Overrun\");\r\n    return;\r\n  }\r\n\r\n  OverrunFlag = true;\r\n\r\n  /* Save FPU context here (if necessary) */\r\n  /* Re-enable timer or interrupt here */\r\n  /* Set model inputs here */\r\n\r\n  /* Step the model */\r\n  toy_car_step();\r\n\r\n  /* Get model outputs here */\r\n\r\n  /* Indicate task complete */\r\n  OverrunFlag = false;\r\n\r\n  /* Disable interrupts here */\r\n  /* Restore FPU context here (if necessary) */\r\n  /* Enable interrupts here */\r\n}\r\n\r\n/*\r\n * The example main function illustrates what is required by your\r\n * application code to initialize, execute, and terminate the generated code.\r\n * Attaching rt_OneStep to a real-time clock is target specific. This example\r\n * illustrates how you do this relative to initializing the model.\r\n */\r\nint_T main(int_T argc, const char *argv[])\r\n{\r\n  /* Unused arguments */\r\n  (void)(argc);\r\n  (void)(argv);\r\n\r\n  /* Initialize model */\r\n  toy_car_initialize();\r\n\r\n  /* Attach rt_OneStep to a timer or interrupt service routine with\r\n   * period 0.001 seconds (base rate of the model) here.\r\n   * The call syntax for rt_OneStep is\r\n   *\r\n   *  rt_OneStep();\r\n   */\r\n  printf(\"Warning: The simulation will run forever. \"\r\n         \"Generated ERT main won't simulate model step behavior. \"\r\n         \"To change this behavior select the 'MAT-file logging' option.\\n\");\r\n  fflush((NULL));\r\n  while (rtmGetErrorStatus(toy_car_M) == (NULL)) {\r\n    /*  Perform application tasks here */\r\n  }\r\n\r\n  /* Terminate model */\r\n  toy_car_terminate();\r\n  return 0;\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"toy_car.c","type":"source","group":"model","path":"C:\\Users\\user\\Desktop\\lke\\4. Matlab + Simulink + Stateflow\\Day4\\toy_car_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Trial License - for use to evaluate programs for possible purchase as\r\n * an end-user only.\r\n *\r\n * File: toy_car.c\r\n *\r\n * Code generated for Simulink model 'toy_car'.\r\n *\r\n * Model version                  : 1.2\r\n * Simulink Coder version         : 9.8 (R2022b) 13-May-2022\r\n * C/C++ source code generated on : Thu Aug 31 14:30:01 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"toy_car.h\"\r\n#include \"rtwtypes.h\"\r\n#include \"zero_crossing_types.h\"\r\n\r\n/* Named constants for Chart: '<Root>/Chart' */\r\n#define toy_car_IN_BW                  ((uint8_T)1U)\r\n#define toy_car_IN_FAST                ((uint8_T)1U)\r\n#define toy_car_IN_FW                  ((uint8_T)2U)\r\n#define toy_car_IN_NO_ACTIVE_CHILD     ((uint8_T)0U)\r\n#define toy_car_IN_OFF                 ((uint8_T)1U)\r\n#define toy_car_IN_ON                  ((uint8_T)2U)\r\n#define toy_car_IN_SLOW                ((uint8_T)2U)\r\n#define toy_car_event_DIR              (2)\r\n#define toy_car_event_SPD              (1)\r\n#define toy_car_event_SW               (0)\r\n\r\n/* Block states (default storage) */\r\nDW_toy_car_T toy_car_DW;\r\n\r\n/* Previous zero-crossings (trigger) states */\r\nPrevZCX_toy_car_T toy_car_PrevZCX;\r\n\r\n/* Real-time model */\r\nstatic RT_MODEL_toy_car_T toy_car_M_;\r\nRT_MODEL_toy_car_T *const toy_car_M = &toy_car_M_;\r\n\r\n/* Forward declaration for local functions */\r\nstatic void toy_car_chartstep_c3_toy_car(const int32_T *sfEvent);\r\n\r\n/* Function for Chart: '<Root>/Chart' */\r\nstatic void toy_car_chartstep_c3_toy_car(const int32_T *sfEvent)\r\n{\r\n  if (toy_car_DW.is_c3_toy_car == toy_car_IN_OFF) {\r\n    if (*sfEvent == toy_car_event_SW) {\r\n      toy_car_DW.is_c3_toy_car = toy_car_IN_ON;\r\n      switch (toy_car_DW.was_DIRECTION) {\r\n       case toy_car_IN_BW:\r\n        toy_car_DW.is_DIRECTION = toy_car_IN_BW;\r\n        toy_car_DW.was_DIRECTION = toy_car_IN_BW;\r\n        break;\r\n\r\n       case toy_car_IN_FW:\r\n        toy_car_DW.is_DIRECTION = toy_car_IN_FW;\r\n        toy_car_DW.was_DIRECTION = toy_car_IN_FW;\r\n        break;\r\n\r\n       default:\r\n        toy_car_DW.is_DIRECTION = toy_car_IN_FW;\r\n        toy_car_DW.was_DIRECTION = toy_car_IN_FW;\r\n        break;\r\n      }\r\n\r\n      switch (toy_car_DW.was_SPEED) {\r\n       case toy_car_IN_FAST:\r\n        toy_car_DW.is_SPEED = toy_car_IN_FAST;\r\n        toy_car_DW.was_SPEED = toy_car_IN_FAST;\r\n        break;\r\n\r\n       case toy_car_IN_SLOW:\r\n        toy_car_DW.is_SPEED = toy_car_IN_SLOW;\r\n        toy_car_DW.was_SPEED = toy_car_IN_SLOW;\r\n        break;\r\n\r\n       default:\r\n        toy_car_DW.is_SPEED = toy_car_IN_SLOW;\r\n        toy_car_DW.was_SPEED = toy_car_IN_SLOW;\r\n        break;\r\n      }\r\n    }\r\n\r\n    /* case IN_ON: */\r\n  } else if (*sfEvent == toy_car_event_SW) {\r\n    toy_car_DW.is_SPEED = toy_car_IN_NO_ACTIVE_CHILD;\r\n    toy_car_DW.is_DIRECTION = toy_car_IN_NO_ACTIVE_CHILD;\r\n    toy_car_DW.is_c3_toy_car = toy_car_IN_OFF;\r\n  } else {\r\n    if (toy_car_DW.is_DIRECTION == toy_car_IN_BW) {\r\n      if (*sfEvent == toy_car_event_DIR) {\r\n        toy_car_DW.is_DIRECTION = toy_car_IN_FW;\r\n        toy_car_DW.was_DIRECTION = toy_car_IN_FW;\r\n      }\r\n\r\n      /* case IN_FW: */\r\n    } else if (*sfEvent == toy_car_event_DIR) {\r\n      toy_car_DW.is_DIRECTION = toy_car_IN_BW;\r\n      toy_car_DW.was_DIRECTION = toy_car_IN_BW;\r\n    }\r\n\r\n    if (toy_car_DW.is_SPEED == toy_car_IN_FAST) {\r\n      if (*sfEvent == toy_car_event_SPD) {\r\n        toy_car_DW.is_SPEED = toy_car_IN_SLOW;\r\n        toy_car_DW.was_SPEED = toy_car_IN_SLOW;\r\n      }\r\n\r\n      /* case IN_SLOW: */\r\n    } else if (*sfEvent == toy_car_event_SPD) {\r\n      toy_car_DW.is_SPEED = toy_car_IN_FAST;\r\n      toy_car_DW.was_SPEED = toy_car_IN_FAST;\r\n    }\r\n  }\r\n}\r\n\r\n/* Model step function */\r\nvoid toy_car_step(void)\r\n{\r\n  int32_T sfEvent;\r\n  ZCEventType zcEvent_idx_0;\r\n  ZCEventType zcEvent_idx_1;\r\n  ZCEventType zcEvent_idx_2;\r\n\r\n  /* Chart: '<Root>/Chart' incorporates:\r\n   *  TriggerPort: '<S1>/input events'\r\n   */\r\n  /* Constant: '<S4>/Constant' */\r\n  zcEvent_idx_0 = rt_ZCFcn(ANY_ZERO_CROSSING,&toy_car_PrevZCX.Chart_Trig_ZCE[0],\r\n    (1.0));\r\n\r\n  /* Constant: '<S3>/Constant' */\r\n  zcEvent_idx_1 = rt_ZCFcn(ANY_ZERO_CROSSING,&toy_car_PrevZCX.Chart_Trig_ZCE[1],\r\n    (0.0));\r\n\r\n  /* Constant: '<S2>/Constant' */\r\n  zcEvent_idx_2 = rt_ZCFcn(ANY_ZERO_CROSSING,&toy_car_PrevZCX.Chart_Trig_ZCE[2],\r\n    (0.0));\r\n  if ((zcEvent_idx_0 != NO_ZCEVENT) || (zcEvent_idx_1 != NO_ZCEVENT) ||\r\n      (zcEvent_idx_2 != NO_ZCEVENT)) {\r\n    if ((int32_T)zcEvent_idx_0 != 0) {\r\n      sfEvent = toy_car_event_SW;\r\n      toy_car_chartstep_c3_toy_car(&sfEvent);\r\n    }\r\n\r\n    if ((int32_T)zcEvent_idx_1 != 0) {\r\n      sfEvent = toy_car_event_SPD;\r\n      toy_car_chartstep_c3_toy_car(&sfEvent);\r\n    }\r\n\r\n    if ((int32_T)zcEvent_idx_2 != 0) {\r\n      sfEvent = toy_car_event_DIR;\r\n      toy_car_chartstep_c3_toy_car(&sfEvent);\r\n    }\r\n  }\r\n}\r\n\r\n/* Model initialize function */\r\nvoid toy_car_initialize(void)\r\n{\r\n  toy_car_PrevZCX.Chart_Trig_ZCE[0] = UNINITIALIZED_ZCSIG;\r\n  toy_car_PrevZCX.Chart_Trig_ZCE[1] = UNINITIALIZED_ZCSIG;\r\n  toy_car_PrevZCX.Chart_Trig_ZCE[2] = UNINITIALIZED_ZCSIG;\r\n\r\n  /* Chart: '<Root>/Chart' */\r\n  toy_car_DW.is_c3_toy_car = toy_car_IN_OFF;\r\n}\r\n\r\n/* Model terminate function */\r\nvoid toy_car_terminate(void)\r\n{\r\n  /* (no terminate code required) */\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"toy_car.h","type":"header","group":"model","path":"C:\\Users\\user\\Desktop\\lke\\4. Matlab + Simulink + Stateflow\\Day4\\toy_car_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Trial License - for use to evaluate programs for possible purchase as\r\n * an end-user only.\r\n *\r\n * File: toy_car.h\r\n *\r\n * Code generated for Simulink model 'toy_car'.\r\n *\r\n * Model version                  : 1.2\r\n * Simulink Coder version         : 9.8 (R2022b) 13-May-2022\r\n * C/C++ source code generated on : Thu Aug 31 14:30:01 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_toy_car_h_\r\n#define RTW_HEADER_toy_car_h_\r\n#ifndef toy_car_COMMON_INCLUDES_\r\n#define toy_car_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#endif                                 /* toy_car_COMMON_INCLUDES_ */\r\n\r\n#include \"toy_car_types.h\"\r\n#include \"rt_zcfcn.h\"\r\n#include \"zero_crossing_types.h\"\r\n\r\n/* Macros for accessing real-time model data structure */\r\n#ifndef rtmGetErrorStatus\r\n#define rtmGetErrorStatus(rtm)         ((rtm)->errorStatus)\r\n#endif\r\n\r\n#ifndef rtmSetErrorStatus\r\n#define rtmSetErrorStatus(rtm, val)    ((rtm)->errorStatus = (val))\r\n#endif\r\n\r\n/* Block states (default storage) for system '<Root>' */\r\ntypedef struct {\r\n  uint8_T is_c3_toy_car;               /* '<Root>/Chart' */\r\n  uint8_T is_DIRECTION;                /* '<Root>/Chart' */\r\n  uint8_T is_SPEED;                    /* '<Root>/Chart' */\r\n  uint8_T was_DIRECTION;               /* '<Root>/Chart' */\r\n  uint8_T was_SPEED;                   /* '<Root>/Chart' */\r\n} DW_toy_car_T;\r\n\r\n/* Zero-crossing (trigger) state */\r\ntypedef struct {\r\n  ZCSigState Chart_Trig_ZCE[3];        /* '<Root>/Chart' */\r\n} PrevZCX_toy_car_T;\r\n\r\n/* Real-time Model Data Structure */\r\nstruct tag_RTM_toy_car_T {\r\n  const char_T * volatile errorStatus;\r\n};\r\n\r\n/* Block states (default storage) */\r\nextern DW_toy_car_T toy_car_DW;\r\n\r\n/* Zero-crossing (trigger) state */\r\nextern PrevZCX_toy_car_T toy_car_PrevZCX;\r\n\r\n/* Model entry point functions */\r\nextern void toy_car_initialize(void);\r\nextern void toy_car_step(void);\r\nextern void toy_car_terminate(void);\r\n\r\n/* Real-time Model object */\r\nextern RT_MODEL_toy_car_T *const toy_car_M;\r\n\r\n/*-\r\n * These blocks were eliminated from the model due to optimizations:\r\n *\r\n * Block '<Root>/Display' : Unused code path elimination\r\n * Block '<S2>/Data Type Conversion' : Eliminate redundant data type conversion\r\n * Block '<S3>/Data Type Conversion' : Eliminate redundant data type conversion\r\n * Block '<S4>/Data Type Conversion' : Eliminate redundant data type conversion\r\n */\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is <system>/block_name, where system is the system number (uniquely\r\n * assigned by Simulink) and block_name is the name of the block.\r\n *\r\n * Use the MATLAB hilite_system command to trace the generated code back\r\n * to the model.  For example,\r\n *\r\n * hilite_system('<S3>')    - opens system 3\r\n * hilite_system('<S3>/Kp') - opens and selects block Kp which resides in S3\r\n *\r\n * Here is the system hierarchy for this model\r\n *\r\n * '<Root>' : 'toy_car'\r\n * '<S1>'   : 'toy_car/Chart'\r\n * '<S2>'   : 'toy_car/DIR'\r\n * '<S3>'   : 'toy_car/SPD'\r\n * '<S4>'   : 'toy_car/SW'\r\n */\r\n#endif                                 /* RTW_HEADER_toy_car_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"toy_car_private.h","type":"header","group":"model","path":"C:\\Users\\user\\Desktop\\lke\\4. Matlab + Simulink + Stateflow\\Day4\\toy_car_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Trial License - for use to evaluate programs for possible purchase as\r\n * an end-user only.\r\n *\r\n * File: toy_car_private.h\r\n *\r\n * Code generated for Simulink model 'toy_car'.\r\n *\r\n * Model version                  : 1.2\r\n * Simulink Coder version         : 9.8 (R2022b) 13-May-2022\r\n * C/C++ source code generated on : Thu Aug 31 14:30:01 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_toy_car_private_h_\r\n#define RTW_HEADER_toy_car_private_h_\r\n#include \"rtwtypes.h\"\r\n#include \"zero_crossing_types.h\"\r\n#include \"toy_car_types.h\"\r\n#endif                                 /* RTW_HEADER_toy_car_private_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"toy_car_types.h","type":"header","group":"model","path":"C:\\Users\\user\\Desktop\\lke\\4. Matlab + Simulink + Stateflow\\Day4\\toy_car_ert_rtw","tag":"","groupDisplay":"Model files","code":"/*\r\n * Trial License - for use to evaluate programs for possible purchase as\r\n * an end-user only.\r\n *\r\n * File: toy_car_types.h\r\n *\r\n * Code generated for Simulink model 'toy_car'.\r\n *\r\n * Model version                  : 1.2\r\n * Simulink Coder version         : 9.8 (R2022b) 13-May-2022\r\n * C/C++ source code generated on : Thu Aug 31 14:30:01 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_toy_car_types_h_\r\n#define RTW_HEADER_toy_car_types_h_\r\n\r\n/* Forward declaration for rtModel */\r\ntypedef struct tag_RTM_toy_car_T RT_MODEL_toy_car_T;\r\n\r\n#endif                                 /* RTW_HEADER_toy_car_types_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rt_zcfcn.c","type":"source","group":"utility","path":"C:\\Users\\user\\Desktop\\lke\\4. Matlab + Simulink + Stateflow\\Day4\\toy_car_ert_rtw","tag":"","groupDisplay":"Utility files","code":"/*\r\n * Trial License - for use to evaluate programs for possible purchase as\r\n * an end-user only.\r\n *\r\n * File: rt_zcfcn.c\r\n *\r\n * Code generated for Simulink model 'toy_car'.\r\n *\r\n * Model version                  : 1.2\r\n * Simulink Coder version         : 9.8 (R2022b) 13-May-2022\r\n * C/C++ source code generated on : Thu Aug 31 14:30:01 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"zero_crossing_types.h\"\r\n#include \"rtwtypes.h\"\r\n#include \"rt_zcfcn.h\"\r\n#include \"solver_zc.h\"\r\n\r\n/* Detect zero crossings events. */\r\nZCEventType rt_ZCFcn(ZCDirection zcDir, ZCSigState *prevZc, real_T currValue)\r\n{\r\n  slZcEventType zcsDir;\r\n  slZcEventType tempEv;\r\n  ZCEventType zcEvent = NO_ZCEVENT;    /* assume */\r\n\r\n  /* zcEvent matrix */\r\n  static const slZcEventType eventMatrix[4][4] = {\r\n    /*          ZER              POS              NEG              UNK */\r\n    { SL_ZCS_EVENT_NUL, SL_ZCS_EVENT_Z2P, SL_ZCS_EVENT_Z2N, SL_ZCS_EVENT_NUL },/* ZER */\r\n\r\n    { SL_ZCS_EVENT_P2Z, SL_ZCS_EVENT_NUL, SL_ZCS_EVENT_P2N, SL_ZCS_EVENT_NUL },/* POS */\r\n\r\n    { SL_ZCS_EVENT_N2Z, SL_ZCS_EVENT_N2P, SL_ZCS_EVENT_NUL, SL_ZCS_EVENT_NUL },/* NEG */\r\n\r\n    { SL_ZCS_EVENT_NUL, SL_ZCS_EVENT_NUL, SL_ZCS_EVENT_NUL, SL_ZCS_EVENT_NUL }/* UNK */\r\n  };\r\n\r\n  /* get prevZcEvent and prevZcSign from prevZc */\r\n  const slZcEventType prevEv = (slZcEventType)(((uint8_T)(*prevZc)) >> 2);\r\n  const slZcSignalSignType prevSign = (slZcSignalSignType)(((uint8_T)(*prevZc))\r\n    & (uint8_T)0x03);\r\n\r\n  /* get current zcSignal sign from current zcSignal value */\r\n  const slZcSignalSignType currSign = (slZcSignalSignType)((currValue) > 0.0 ?\r\n    SL_ZCS_SIGN_POS :\r\n    ((currValue) < 0.0 ? SL_ZCS_SIGN_NEG : SL_ZCS_SIGN_ZERO));\r\n\r\n  /* get current zcEvent based on prev and current zcSignal value */\r\n  slZcEventType currEv = eventMatrix[prevSign][currSign];\r\n\r\n  /* get slZcEventType from ZCDirection */\r\n  switch (zcDir) {\r\n   case ANY_ZERO_CROSSING:\r\n    zcsDir = SL_ZCS_EVENT_ALL;\r\n    break;\r\n\r\n   case FALLING_ZERO_CROSSING:\r\n    zcsDir = SL_ZCS_EVENT_ALL_DN;\r\n    break;\r\n\r\n   case RISING_ZERO_CROSSING:\r\n    zcsDir = SL_ZCS_EVENT_ALL_UP;\r\n    break;\r\n\r\n   default:\r\n    zcsDir = SL_ZCS_EVENT_NUL;\r\n    break;\r\n  }\r\n\r\n  /*had event, check if double zc happend remove double detection. */\r\n  if (slZcHadEvent(currEv, zcsDir)) {\r\n    currEv = (slZcEventType)(slZcUnAliasEvents(prevEv, currEv));\r\n  } else {\r\n    currEv = SL_ZCS_EVENT_NUL;\r\n  }\r\n\r\n  /* Update prevZc */\r\n  tempEv = (slZcEventType)(currEv << 2);/* shift left by 2 bits */\r\n  *prevZc = (ZCSigState)((currSign) | (tempEv));\r\n  if ((currEv & SL_ZCS_EVENT_ALL_DN) != 0) {\r\n    zcEvent = FALLING_ZCEVENT;\r\n  } else if ((currEv & SL_ZCS_EVENT_ALL_UP) != 0) {\r\n    zcEvent = RISING_ZCEVENT;\r\n  } else {\r\n    zcEvent = NO_ZCEVENT;\r\n  }\r\n\r\n  return zcEvent;\r\n}                                      /* rt_ZCFcn */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rt_zcfcn.h","type":"header","group":"utility","path":"C:\\Users\\user\\Desktop\\lke\\4. Matlab + Simulink + Stateflow\\Day4\\toy_car_ert_rtw","tag":"","groupDisplay":"Utility files","code":"/*\r\n * Trial License - for use to evaluate programs for possible purchase as\r\n * an end-user only.\r\n *\r\n * File: rt_zcfcn.h\r\n *\r\n * Code generated for Simulink model 'toy_car'.\r\n *\r\n * Model version                  : 1.2\r\n * Simulink Coder version         : 9.8 (R2022b) 13-May-2022\r\n * C/C++ source code generated on : Thu Aug 31 14:30:01 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_rt_zcfcn_h_\r\n#define RTW_HEADER_rt_zcfcn_h_\r\n#include \"zero_crossing_types.h\"\r\n#include \"rtwtypes.h\"\r\n#include \"solver_zc.h\"\r\n#ifndef slZcHadEvent\r\n#define slZcHadEvent(ev, zcsDir)       (((ev) & (zcsDir)) != 0x00 )\r\n#endif\r\n\r\n#ifndef slZcUnAliasEvents\r\n#define slZcUnAliasEvents(evL, evR)    ((((slZcHadEvent((evL), (SL_ZCS_EVENT_N2Z)) && slZcHadEvent((evR), (SL_ZCS_EVENT_Z2P))) || (slZcHadEvent((evL), (SL_ZCS_EVENT_P2Z)) && slZcHadEvent((evR), (SL_ZCS_EVENT_Z2N)))) ? (SL_ZCS_EVENT_NUL) : (evR)))\r\n#endif\r\n\r\nextern ZCEventType rt_ZCFcn(ZCDirection zcDir, ZCSigState *prevZc, real_T\r\n  currValue);\r\n\r\n#endif                                 /* RTW_HEADER_rt_zcfcn_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtwtypes.h","type":"header","group":"utility","path":"C:\\Users\\user\\Desktop\\lke\\4. Matlab + Simulink + Stateflow\\Day4\\toy_car_ert_rtw","tag":"","groupDisplay":"Utility files","code":"/*\r\n * Trial License - for use to evaluate programs for possible purchase as\r\n * an end-user only.\r\n *\r\n * File: rtwtypes.h\r\n *\r\n * Code generated for Simulink model 'toy_car'.\r\n *\r\n * Model version                  : 1.2\r\n * Simulink Coder version         : 9.8 (R2022b) 13-May-2022\r\n * C/C++ source code generated on : Thu Aug 31 14:30:01 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n/* Logical type definitions */\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n/*=======================================================================*\r\n * Target hardware information\r\n *   Device type: Intel->x86-64 (Windows64)\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32\r\n *                       native word size:  64\r\n *   Byte ordering: LittleEndian\r\n *   Signed integer division rounds to: Zero\r\n *   Shift right on a signed integer as arithmetic shift: on\r\n *=======================================================================*/\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T.                        *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n/*===========================================================================*\r\n * Complex number type definitions                                           *\r\n *===========================================================================*/\r\n#define CREAL_T\r\n\r\ntypedef struct {\r\n  real32_T re;\r\n  real32_T im;\r\n} creal32_T;\r\n\r\ntypedef struct {\r\n  real64_T re;\r\n  real64_T im;\r\n} creal64_T;\r\n\r\ntypedef struct {\r\n  real_T re;\r\n  real_T im;\r\n} creal_T;\r\n\r\n#define CINT8_T\r\n\r\ntypedef struct {\r\n  int8_T re;\r\n  int8_T im;\r\n} cint8_T;\r\n\r\n#define CUINT8_T\r\n\r\ntypedef struct {\r\n  uint8_T re;\r\n  uint8_T im;\r\n} cuint8_T;\r\n\r\n#define CINT16_T\r\n\r\ntypedef struct {\r\n  int16_T re;\r\n  int16_T im;\r\n} cint16_T;\r\n\r\n#define CUINT16_T\r\n\r\ntypedef struct {\r\n  uint16_T re;\r\n  uint16_T im;\r\n} cuint16_T;\r\n\r\n#define CINT32_T\r\n\r\ntypedef struct {\r\n  int32_T re;\r\n  int32_T im;\r\n} cint32_T;\r\n\r\n#define CUINT32_T\r\n\r\ntypedef struct {\r\n  uint32_T re;\r\n  uint32_T im;\r\n} cuint32_T;\r\n\r\n/*=======================================================================*\r\n * Min and Max:                                                          *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *=======================================================================*/\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n\r\n/* Block D-Work pointer type */\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 /* RTWTYPES_H */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"zero_crossing_types.h","type":"header","group":"utility","path":"C:\\Users\\user\\Desktop\\lke\\4. Matlab + Simulink + Stateflow\\Day4\\toy_car_ert_rtw","tag":"","groupDisplay":"Utility files","code":"/*\r\n * Trial License - for use to evaluate programs for possible purchase as\r\n * an end-user only.\r\n *\r\n * File: zero_crossing_types.h\r\n *\r\n * Code generated for Simulink model 'toy_car'.\r\n *\r\n * Model version                  : 1.2\r\n * Simulink Coder version         : 9.8 (R2022b) 13-May-2022\r\n * C/C++ source code generated on : Thu Aug 31 14:30:01 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: Intel->x86-64 (Windows64)\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef ZERO_CROSSING_TYPES_H\r\n#define ZERO_CROSSING_TYPES_H\r\n#include \"rtwtypes.h\"\r\n\r\n/* Trigger directions: falling, either, and rising */\r\ntypedef enum {\r\n  FALLING_ZERO_CROSSING = -1,\r\n  ANY_ZERO_CROSSING = 0,\r\n  RISING_ZERO_CROSSING = 1\r\n} ZCDirection;\r\n\r\n/* Previous state of a trigger signal */\r\ntypedef uint8_T ZCSigState;\r\n\r\n/* Initial value of a trigger zero crossing signal */\r\n#define UNINITIALIZED_ZCSIG            0x03U\r\n#define NEG_ZCSIG                      0x02U\r\n#define POS_ZCSIG                      0x01U\r\n#define ZERO_ZCSIG                     0x00U\r\n\r\n/* Current state of a trigger signal */\r\ntypedef enum { FALLING_ZCEVENT = -1, NO_ZCEVENT = 0, RISING_ZCEVENT = 1 }\r\n  ZCEventType;\r\n\r\n#endif                                 /* ZERO_CROSSING_TYPES_H */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"}],"trace":"{\"model\":\"toy_car\",\"sources\":[\"toy_car.c\",\"toy_car.h\"],\"categoricalProps\":[\"ModelElemCategory\",\"StorageClass\"],\"categoricalValues\":[\"InternalData\",\"Default\"],\"sidPrefixes\":[\"toy_car\"],\"fileRecords\":{\"0\":{\"records\":[{\"tk\":[52,5,52,7],\"els\":[\"0:1:1\"]},{\"tk\":[52,9,52,10],\"els\":[\"0:1:7:105-107\",\"0:1:1\"]},{\"tk\":[52,10,52,17],\"els\":[\"0:1:7:105-107\",\"0:1:1\"]},{\"tk\":[52,18,52,20],\"els\":[\"0:1:7:105-107\",\"0:1:1\"]},{\"tk\":[52,21,52,37],\"els\":[\"0:1:7:105-107\",\"0:1:1\"]},{\"tk\":[53,7,53,17],\"els\":[\"0:1:3\",\"0:1:1\"]},{\"tk\":[53,18,53,31],\"els\":[\"0:1:3\",\"0:1:1\"]},{\"tk\":[53,32,53,33],\"els\":[\"0:1:3\",\"0:1:1\"]},{\"tk\":[53,34,53,47],\"els\":[\"0:1:3\",\"0:1:1\"]},{\"tk\":[54,7,54,13],\"els\":[\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[54,15,54,25],\"els\":[\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[54,26,54,39],\"els\":[\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[55,13,55,26],\"els\":[\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[56,9,56,19],\"els\":[\"0:1:25\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[56,20,56,32],\"els\":[\"0:1:25\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[56,33,56,34],\"els\":[\"0:1:25\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[56,35,56,48],\"els\":[\"0:1:25\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[57,9,57,19],\"els\":[\"0:1:25\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[57,20,57,33],\"els\":[\"0:1:25\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[57,34,57,35],\"els\":[\"0:1:25\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[57,36,57,49],\"els\":[\"0:1:25\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[60,13,60,26],\"els\":[\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[61,9,61,19],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[61,20,61,32],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[61,33,61,34],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[61,35,61,48],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[62,9,62,19],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[62,20,62,33],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[62,34,62,35],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[62,36,62,49],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[66,9,66,19],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[66,20,66,32],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[66,33,66,34],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[66,35,66,48],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[67,9,67,19],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[67,20,67,33],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[67,34,67,35],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[67,36,67,49],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[71,7,71,13],\"els\":[\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[71,15,71,25],\"els\":[\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[71,26,71,35],\"els\":[\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[72,13,72,28],\"els\":[\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[73,9,73,19],\"els\":[\"0:1:5\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[73,20,73,28],\"els\":[\"0:1:5\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[73,29,73,30],\"els\":[\"0:1:5\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[73,31,73,46],\"els\":[\"0:1:5\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[74,9,74,19],\"els\":[\"0:1:5\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[74,20,74,29],\"els\":[\"0:1:5\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[74,30,74,31],\"els\":[\"0:1:5\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[74,32,74,47],\"els\":[\"0:1:5\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[77,13,77,28],\"els\":[\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[78,9,78,19],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[78,20,78,28],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[78,29,78,30],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[78,31,78,46],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[79,9,79,19],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[79,20,79,29],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[79,30,79,31],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[79,32,79,47],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[83,9,83,19],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[83,20,83,28],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[83,29,83,30],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[83,31,83,46],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[84,9,84,19],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[84,20,84,29],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[84,30,84,31],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[84,32,84,47],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\",\"0:1:1\"]},{\"tk\":[90,10,90,12],\"els\":[\"0:1:3\"]},{\"tk\":[90,14,90,15],\"els\":[\"0:1:6:105-107\",\"0:1:3\"]},{\"tk\":[90,15,90,22],\"els\":[\"0:1:6:105-107\",\"0:1:3\"]},{\"tk\":[90,23,90,25],\"els\":[\"0:1:6:105-107\",\"0:1:3\"]},{\"tk\":[90,26,90,42],\"els\":[\"0:1:6:105-107\",\"0:1:3\"]},{\"tk\":[91,5,91,15],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[91,16,91,24],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[91,25,91,26],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[91,27,91,53],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[92,5,92,15],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[92,16,92,28],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[92,29,92,30],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[92,31,92,57],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[93,5,93,15],\"els\":[\"0:1:1\",\"0:1:3\"]},{\"tk\":[93,16,93,29],\"els\":[\"0:1:1\",\"0:1:3\"]},{\"tk\":[93,30,93,31],\"els\":[\"0:1:1\",\"0:1:3\"]},{\"tk\":[93,32,93,46],\"els\":[\"0:1:1\",\"0:1:3\"]},{\"tk\":[95,5,95,7],\"els\":[\"0:1:23\",\"0:1:3\"]},{\"tk\":[95,9,95,19],\"els\":[\"0:1:23\",\"0:1:3\"]},{\"tk\":[95,20,95,32],\"els\":[\"0:1:23\",\"0:1:3\"]},{\"tk\":[95,33,95,35],\"els\":[\"0:1:23\",\"0:1:3\"]},{\"tk\":[95,36,95,49],\"els\":[\"0:1:23\",\"0:1:3\"]},{\"tk\":[96,7,96,9],\"els\":[\"0:1:25\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[96,11,96,12],\"els\":[\"0:1:26:106-109\",\"0:1:25\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[96,12,96,19],\"els\":[\"0:1:26:106-109\",\"0:1:25\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[96,20,96,22],\"els\":[\"0:1:26:106-109\",\"0:1:25\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[96,23,96,40],\"els\":[\"0:1:26:106-109\",\"0:1:25\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[97,9,97,19],\"els\":[\"0:1:27\",\"0:1:25\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[97,20,97,32],\"els\":[\"0:1:27\",\"0:1:25\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[97,33,97,34],\"els\":[\"0:1:27\",\"0:1:25\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[97,35,97,48],\"els\":[\"0:1:27\",\"0:1:25\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[98,9,98,19],\"els\":[\"0:1:27\",\"0:1:25\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[98,20,98,33],\"els\":[\"0:1:27\",\"0:1:25\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[98,34,98,35],\"els\":[\"0:1:27\",\"0:1:25\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[98,36,98,49],\"els\":[\"0:1:27\",\"0:1:25\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[102,12,102,14],\"els\":[\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[102,16,102,17],\"els\":[\"0:1:22:106-109\",\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[102,17,102,24],\"els\":[\"0:1:22:106-109\",\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[102,25,102,27],\"els\":[\"0:1:22:106-109\",\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[102,28,102,45],\"els\":[\"0:1:22:106-109\",\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[103,7,103,17],\"els\":[\"0:1:25\",\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[103,18,103,30],\"els\":[\"0:1:25\",\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[103,31,103,32],\"els\":[\"0:1:25\",\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[103,33,103,46],\"els\":[\"0:1:25\",\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[104,7,104,17],\"els\":[\"0:1:25\",\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[104,18,104,31],\"els\":[\"0:1:25\",\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[104,32,104,33],\"els\":[\"0:1:25\",\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[104,34,104,47],\"els\":[\"0:1:25\",\"0:1:27\",\"0:1:23\",\"0:1:3\"]},{\"tk\":[107,5,107,7],\"els\":[\"0:1:18\",\"0:1:3\"]},{\"tk\":[107,9,107,19],\"els\":[\"0:1:18\",\"0:1:3\"]},{\"tk\":[107,20,107,28],\"els\":[\"0:1:18\",\"0:1:3\"]},{\"tk\":[107,29,107,31],\"els\":[\"0:1:18\",\"0:1:3\"]},{\"tk\":[107,32,107,47],\"els\":[\"0:1:18\",\"0:1:3\"]},{\"tk\":[108,7,108,9],\"els\":[\"0:1:5\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[108,11,108,12],\"els\":[\"0:1:10:106-109\",\"0:1:5\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[108,12,108,19],\"els\":[\"0:1:10:106-109\",\"0:1:5\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[108,20,108,22],\"els\":[\"0:1:10:106-109\",\"0:1:5\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[108,23,108,40],\"els\":[\"0:1:10:106-109\",\"0:1:5\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[109,9,109,19],\"els\":[\"0:1:4\",\"0:1:5\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[109,20,109,28],\"els\":[\"0:1:4\",\"0:1:5\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[109,29,109,30],\"els\":[\"0:1:4\",\"0:1:5\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[109,31,109,46],\"els\":[\"0:1:4\",\"0:1:5\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[110,9,110,19],\"els\":[\"0:1:4\",\"0:1:5\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[110,20,110,29],\"els\":[\"0:1:4\",\"0:1:5\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[110,30,110,31],\"els\":[\"0:1:4\",\"0:1:5\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[110,32,110,47],\"els\":[\"0:1:4\",\"0:1:5\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[114,12,114,14],\"els\":[\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[114,16,114,17],\"els\":[\"0:1:9:105-108\",\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[114,17,114,24],\"els\":[\"0:1:9:105-108\",\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[114,25,114,27],\"els\":[\"0:1:9:105-108\",\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[114,28,114,45],\"els\":[\"0:1:9:105-108\",\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[115,7,115,17],\"els\":[\"0:1:5\",\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[115,18,115,26],\"els\":[\"0:1:5\",\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[115,27,115,28],\"els\":[\"0:1:5\",\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[115,29,115,44],\"els\":[\"0:1:5\",\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[116,7,116,17],\"els\":[\"0:1:5\",\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[116,18,116,27],\"els\":[\"0:1:5\",\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[116,28,116,29],\"els\":[\"0:1:5\",\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[116,30,116,45],\"els\":[\"0:1:5\",\"0:1:4\",\"0:1:18\",\"0:1:3\"]},{\"tk\":[133,3,133,16],\"els\":[\"0:1::110\"]},{\"tk\":[133,17,133,18],\"els\":[\"0:1::110\",\"0:1\"]},{\"tk\":[133,19,133,27],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[133,27,133,28],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[133,28,133,45],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[133,45,133,46],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[133,46,133,47],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[133,47,133,62],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[133,62,133,63],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[133,63,133,77],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[133,77,133,78],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[133,78,133,79],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[133,79,133,80],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[133,80,133,81],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[134,5,134,6],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[134,6,134,9],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[134,9,134,10],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[134,10,134,11],\"els\":[\"0:1::110\",\"0:1\",\"0:5\"]},{\"tk\":[137,3,137,16],\"els\":[\"0:1::110\"]},{\"tk\":[137,17,137,18],\"els\":[\"0:1::110\",\"0:1\"]},{\"tk\":[137,19,137,27],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[137,27,137,28],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[137,28,137,45],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[137,45,137,46],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[137,46,137,47],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[137,47,137,62],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[137,62,137,63],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[137,63,137,77],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[137,77,137,78],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[137,78,137,79],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[137,79,137,80],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[137,80,137,81],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[138,5,138,6],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[138,6,138,9],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[138,9,138,10],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[138,10,138,11],\"els\":[\"0:1::110\",\"0:1\",\"0:10\"]},{\"tk\":[141,3,141,16],\"els\":[\"0:1::110\"]},{\"tk\":[141,17,141,18],\"els\":[\"0:1::110\",\"0:1\"]},{\"tk\":[141,19,141,27],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[141,27,141,28],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[141,28,141,45],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[141,45,141,46],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[141,46,141,47],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[141,47,141,62],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[141,62,141,63],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[141,63,141,77],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[141,77,141,78],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[141,78,141,79],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[141,79,141,80],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[141,80,141,81],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[142,5,142,6],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[142,6,142,9],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[142,9,142,10],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[142,10,142,11],\"els\":[\"0:1::110\",\"0:1\",\"0:14\"]},{\"tk\":[143,3,143,5],\"els\":[\"0:1::110\",\"0:1\"]},{\"tk\":[143,8,143,21],\"els\":[\"0:1::110\"]},{\"tk\":[143,22,143,24],\"els\":[\"0:1::110\",\"0:1\"]},{\"tk\":[143,25,143,35],\"els\":[\"0:1::110\",\"0:1\"]},{\"tk\":[143,37,143,39],\"els\":[\"0:1::110\",\"0:1\"]},{\"tk\":[143,41,143,54],\"els\":[\"0:1::110\"]},{\"tk\":[143,55,143,57],\"els\":[\"0:1::110\",\"0:1\"]},{\"tk\":[143,58,143,68],\"els\":[\"0:1::110\",\"0:1\"]},{\"tk\":[143,70,143,72],\"els\":[\"0:1::110\",\"0:1\"]},{\"tk\":[144,8,144,21],\"els\":[\"0:1::110\"]},{\"tk\":[144,22,144,24],\"els\":[\"0:1::110\",\"0:1\"]},{\"tk\":[144,25,144,35],\"els\":[\"0:1::110\",\"0:1\"]},{\"tk\":[145,5,145,7],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[145,9,145,10],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[145,18,145,31],\"els\":[\"0:1::110\"]},{\"tk\":[145,32,145,34],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[145,35,145,36],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[146,7,146,14],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[146,15,146,16],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[146,17,146,33],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[147,7,147,35],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[147,35,147,36],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[147,36,147,37],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[147,37,147,44],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[147,44,147,45],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[150,5,150,7],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[150,9,150,10],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[150,18,150,31],\"els\":[\"0:1::110\"]},{\"tk\":[150,32,150,34],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[150,35,150,36],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[151,7,151,14],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[151,15,151,16],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[151,17,151,34],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[152,7,152,35],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[152,35,152,36],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[152,36,152,37],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[152,37,152,44],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[152,44,152,45],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[155,5,155,7],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[155,9,155,10],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[155,18,155,31],\"els\":[\"0:1::110\"]},{\"tk\":[155,32,155,34],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[155,35,155,36],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[156,7,156,14],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[156,15,156,16],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[156,17,156,34],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[157,7,157,35],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[157,35,157,36],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[157,36,157,37],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[157,37,157,44],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[157,44,157,45],\"els\":[\"0:1::105\",\"0:1::110\",\"0:1\"]},{\"tk\":[170,3,170,13],\"els\":[\"0:1:1\",\"0:1\",\"0:1::105\"]},{\"tk\":[170,14,170,27],\"els\":[\"0:1:1\",\"0:1\",\"0:1::105\"]},{\"tk\":[170,28,170,29],\"els\":[\"0:1:1\",\"0:1\",\"0:1::105\"]},{\"tk\":[170,30,170,44],\"els\":[\"0:1:1\",\"0:1\",\"0:1::105\"]}]},\"1\":{\"records\":[{\"tk\":[41,3,41,10],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[41,11,41,24],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[41,24,41,25],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[42,3,42,10],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[42,11,42,23],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[42,23,42,24],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[43,3,43,10],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[43,11,43,19],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[43,19,43,20],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[44,3,44,10],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[44,11,44,24],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[44,24,44,25],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[45,3,45,10],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[45,11,45,20],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[45,20,45,21],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[50,3,50,13],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[50,14,50,28],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[50,28,50,29],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[50,29,50,30],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[50,30,50,31],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[50,31,50,32],\"els\":[\"1:1\"],\"ct\":{\"0\":0,\"1\":1}}]}}}","blocks":[{"RTWName":"<S1>:1","SIDString":"toy_car:1:1"},{"RTWName":"<S1>:3","SIDString":"toy_car:1:3"},{"RTWName":"<S1>:18","SIDString":"toy_car:1:18"},{"RTWName":"<S1>:5","SIDString":"toy_car:1:5"},{"RTWName":"<S1>:4","SIDString":"toy_car:1:4"},{"RTWName":"<S1>:23","SIDString":"toy_car:1:23"},{"RTWName":"<S1>:25","SIDString":"toy_car:1:25"},{"RTWName":"<S1>:27","SIDString":"toy_car:1:27"},{"RTWName":"<S1>:2","SIDString":"toy_car:1:2"},{"RTWName":"<S1>:6","SIDString":"toy_car:1:6"},{"RTWName":"<S1>:7","SIDString":"toy_car:1:7"},{"RTWName":"<S1>:11","SIDString":"toy_car:1:11"},{"RTWName":"<S1>:9","SIDString":"toy_car:1:9"},{"RTWName":"<S1>:10","SIDString":"toy_car:1:10"},{"RTWName":"<S1>:24","SIDString":"toy_car:1:24"},{"RTWName":"<S1>:22","SIDString":"toy_car:1:22"},{"RTWName":"<S1>:26","SIDString":"toy_car:1:26"},{"RTWName":"<S2>/Constant","SIDString":"toy_car:14"},{"RTWName":"<S2>/Data Type Conversion","SIDString":"toy_car:15"},{"RTWName":"<S2>/Out1","SIDString":"toy_car:16"},{"RTWName":"<Root>/Display","SIDString":"toy_car:2"},{"RTWName":"<Root>/Mux","SIDString":"toy_car:3"},{"RTWName":"<Root>/Mux1","SIDString":"toy_car:8"},{"RTWName":"<S3>/Constant","SIDString":"toy_car:10"},{"RTWName":"<S3>/Data Type Conversion","SIDString":"toy_car:11"},{"RTWName":"<S3>/Out1","SIDString":"toy_car:12"},{"RTWName":"<S4>/Constant","SIDString":"toy_car:5"},{"RTWName":"<S4>/Data Type Conversion","SIDString":"toy_car:6"},{"RTWName":"<S4>/Out1","SIDString":"toy_car:7"},{"RTWName":"<Root>/Chart","SIDString":"toy_car:1"},{"RTWName":"<Root>/DIR","SIDString":"toy_car:13"},{"RTWName":"<Root>/SPD","SIDString":"toy_car:9"},{"RTWName":"<Root>/SW","SIDString":"toy_car:4"}],"coverage":[{"id":"SimulinkCoverage","name":"Simulink Coverage","files":[]},{"id":"Bullseye","name":"Bullseye Coverage","files":[]},{"id":"LDRA","name":"LDRA Testbed","files":[]}],"features":{"annotation":false,"coverage":true,"profiling":true,"tooltip":true,"coverageTooltip":false,"showJustificationLinks":false,"showProfilingInfo":false,"showTaskSummary":false}};