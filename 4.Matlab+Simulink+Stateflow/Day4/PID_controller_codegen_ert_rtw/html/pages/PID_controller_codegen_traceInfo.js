function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "PID_controller_codegen"};
	this.sidHashMap["PID_controller_codegen"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "PID_controller_codegen:1"};
	this.sidHashMap["PID_controller_codegen:1"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "PID_controller_codegen:11"};
	this.sidHashMap["PID_controller_codegen:11"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<Root>/Controller"] = {sid: "PID_controller_codegen:1"};
	this.sidHashMap["PID_controller_codegen:1"] = {rtwname: "<Root>/Controller"};
	this.rtwnameHashMap["<S1>/e"] = {sid: "PID_controller_codegen:2"};
	this.sidHashMap["PID_controller_codegen:2"] = {rtwname: "<S1>/e"};
	this.rtwnameHashMap["<S1>/Discrete Derivative"] = {sid: "PID_controller_codegen:11"};
	this.sidHashMap["PID_controller_codegen:11"] = {rtwname: "<S1>/Discrete Derivative"};
	this.rtwnameHashMap["<S1>/Discrete-Time Integrator"] = {sid: "PID_controller_codegen:10"};
	this.sidHashMap["PID_controller_codegen:10"] = {rtwname: "<S1>/Discrete-Time Integrator"};
	this.rtwnameHashMap["<S1>/Gain"] = {sid: "PID_controller_codegen:4"};
	this.sidHashMap["PID_controller_codegen:4"] = {rtwname: "<S1>/Gain"};
	this.rtwnameHashMap["<S1>/Gain1"] = {sid: "PID_controller_codegen:5"};
	this.sidHashMap["PID_controller_codegen:5"] = {rtwname: "<S1>/Gain1"};
	this.rtwnameHashMap["<S1>/Gain2"] = {sid: "PID_controller_codegen:6"};
	this.sidHashMap["PID_controller_codegen:6"] = {rtwname: "<S1>/Gain2"};
	this.rtwnameHashMap["<S1>/Sum1"] = {sid: "PID_controller_codegen:8"};
	this.sidHashMap["PID_controller_codegen:8"] = {rtwname: "<S1>/Sum1"};
	this.rtwnameHashMap["<S1>/Out1"] = {sid: "PID_controller_codegen:9"};
	this.sidHashMap["PID_controller_codegen:9"] = {rtwname: "<S1>/Out1"};
	this.rtwnameHashMap["<S2>/U"] = {sid: "PID_controller_codegen:11:1"};
	this.sidHashMap["PID_controller_codegen:11:1"] = {rtwname: "<S2>/U"};
	this.rtwnameHashMap["<S2>/Data Type Duplicate"] = {sid: "PID_controller_codegen:11:2"};
	this.sidHashMap["PID_controller_codegen:11:2"] = {rtwname: "<S2>/Data Type Duplicate"};
	this.rtwnameHashMap["<S2>/Diff"] = {sid: "PID_controller_codegen:11:3"};
	this.sidHashMap["PID_controller_codegen:11:3"] = {rtwname: "<S2>/Diff"};
	this.rtwnameHashMap["<S2>/TSamp"] = {sid: "PID_controller_codegen:11:4"};
	this.sidHashMap["PID_controller_codegen:11:4"] = {rtwname: "<S2>/TSamp"};
	this.rtwnameHashMap["<S2>/UD"] = {sid: "PID_controller_codegen:11:5"};
	this.sidHashMap["PID_controller_codegen:11:5"] = {rtwname: "<S2>/UD"};
	this.rtwnameHashMap["<S2>/Y"] = {sid: "PID_controller_codegen:11:6"};
	this.sidHashMap["PID_controller_codegen:11:6"] = {rtwname: "<S2>/Y"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
